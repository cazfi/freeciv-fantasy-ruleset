; This is minimal governments ruleset. Replace <modpack> with your module name in
; description.

[datafile]
description = "<modpack> governments data for Freeciv"
options = "+Freeciv-ruleset-3.2-Devel-2022.Feb.02"
format_version = 30

[governments]
during_revolution = "Revolution"

; /* <-- avoid gettext warnings
;
; Below: The individual government types, one per section.
;
; The actual tag used (the * in [government_*]) does not matter, except
; it must be unique within this file, and it may be used in debug
; output when reading this file.
;
; For the "official" rulesets, the order of these sections should not
; be changed because that would break backward compatibility with
; savegames.  (In particular, if Fundamentalism is added to default
; ruleset, should be added at end.)
;
; Notes on fields:
;
; name         = translatable name as seen by user
; rule_name    = (optional) internal name for savegames, rulesets etc; if
;                not present, "name" is used for this purpose too. Since
;                the name used in savegames must not change, if you want
;                to rename an item after a ruleset has been released, you
;                should set "rule_name" to the original value of "name".
; reqs         = requirements for this government (see README.effects)
; graphic      = tag specifing preferred graphic
; graphic_alt  = alternate graphics tag if preferred is not found;
;                should be a standard tag if preferred is not;
;                otherwise may be "-"
; ai_better    = AI will not consider this government for use if the
;                government listed here is available
; ruler_male_title   = The default male ruler title for the government type.
;                      It's a format string where name of the ruler is marked
;                      by '%s'.
;                      Individual nations may override this by their
;                      own title.
; ruler_female_title = The default female ruler title for the government type.
;                      See above ruler_male_title.
; helptext     = optional help text string; should escape all raw newlines
;                so that xgettext parsing works
;
; */ <-- avoid gettext warnings

;------------------------------------------------------------------------
[government_revolution]

name        = _("Revolution")
; No reqs
graphic     = "gov.revolution"
graphic_alt = "gov.anarchy"

ruler_male_title = _("Revolutionary %s")
ruler_female_title = _("?female:Revolutionary %s")

helptext = _("\
Revolution happens between government changes.\
")

;------------------------------------------------------------------------
;starter govs
[government_despotism]

name        = _("Despotism")
reqs =
   { "type", "name", "range"
; No requirements
   }
graphic     = "gov.despotism"
graphic_alt = "-"

ruler_male_title = _("Ruler %s")
ruler_female_title = _("Ruler %s")

helptext = _("\
    depotism\
")
[government_tribal]

name        = _("Tribal")
reqs =
   { "type", "name", "range"
; No requirements
   }
graphic     = "gov.tribal"
graphic_alt = "-"

ruler_male_title = _("Ruler %s")
ruler_female_title = _("Ruler %s")

helptext = _("\
    republic\
")
;------------------------------------------------------------------------
; "advanced" governments
[government_monarchy]
name = _("Monarchy")
reqs = {"type","name","range"
        "Tech","Monarchy","Player"
}
graphic = "gov.monarchy"
graphic_alt = "-"

ruler_male_title = _("King %s")
ruler_female_title = _("Queen %s")
helptext = _("does it need help txt")

[government_Democracy]
name = _("Democracy")
reqs = { "type","name","range","present"
         "Tech","Democracy","Player",TRUE
}

graphic = "gov.democracy"
graphic_alt = "-"

ruler_male_title = _("President %s")
ruler_female_title = _("President %s")
helptext = _("") 
;TODO: tech tree specific governments

; /* <-- avoid gettext warnings
; [multiplier_]
; Multipliers (aka policies)
;
; name                    = translatable name as seen by user
; rule_name               = (optional) internal name for savegames, rulesets
;                           etc; if not present, "name" is used for this
;                           purpose too. Since the name used in savegames must
;                           not change, if you want to rename an item after a
;                           ruleset has been released, you should set
;                           "rule_name" to the original value of "name".
; default                 = default value (as presented in UI)
; start                   = minimum value (as presented in UI)
; stop                    = maximum value (as presented in UI)
; step                    = minimum increase/decrease (as presented in UI)
; offset                  = offset/factor control how UI values are turned
; factor                  = into effect values for use in effects.ruleset.
;                           effect_value = (ui_value + offset) * (factor/100)
;                           Optional; by default offset=0, factor=100, so
;                           that UI values are used as-is.
; minimum_turns           = how often multiplier can be changed, or: how long one is stuck
;                           with the given value after changing to it
; reqs                    = requirements for adjusting this policy (see README.effects)
; helptext                = optional help text string; should escape all raw
;                           newlines so that xgettext parsing works
;
; */ <-- avoid gettext warnings

